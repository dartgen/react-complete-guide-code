{"ast":null,"code":"var _jsxFileName = \"/workspaces/react-complete-guide-code/code/01-starting-project/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const enteredNameIsValid = entered;\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n    if (enteredName.trim() !== '') {\n      setEnteredNameIsValid(true);\n    }\n  };\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      return;\n    }\n    setEnteredNameIsValid(true);\n\n    //nameInputRef.current.value = ''; => Not ideal, manipulates the DOM\n    setEnteredName(\"\");\n  };\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const nameInputClasses = nameInputIsInvalid ? \"form-control invalid\" : \"form-control\";\n  const onBlurHandler = event => {\n    setEnteredNameTouched(true);\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: onBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"/Wg+bUgS243ZqGS0sPTlym93/WY=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useRef","useState","useEffect","SimpleInput","props","nameInputRef","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","enteredNameIsValid","entered","nameInputChangeHandler","event","target","value","trim","setEnteredNameIsValid","formSubmissionHandler","preventDefault","nameInputIsInvalid","nameInputClasses","onBlurHandler"],"sources":["/workspaces/react-complete-guide-code/code/01-starting-project/src/components/SimpleInput.js"],"sourcesContent":["import { useRef, useState, useEffect } from \"react\";\n\nconst SimpleInput = (props) => {\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n\n  const enteredNameIsValid = entered;\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n\n    if (enteredName.trim() !== '') {\n      setEnteredNameIsValid(true);\n    }\n  };\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    setEnteredNameTouched(true);\n\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n    setEnteredNameIsValid(true);\n\n    //nameInputRef.current.value = ''; => Not ideal, manipulates the DOM\n    setEnteredName(\"\");\n  };\n\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n  const nameInputClasses = nameInputIsInvalid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  const onBlurHandler = (event) => {\n    setEnteredNameTouched(true);\n    \n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n    }\n  };\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          ref={nameInputRef}\n          type=\"text\"\n          id=\"name\"\n          onChange={nameInputChangeHandler}\n          onBlur={onBlurHandler}\n          value={enteredName}\n        />\n        {nameInputIsInvalid && (\n          <p className=\"error-text\">Name must not be empty.</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAEpD,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAA;EAC7B,MAAMC,YAAY,GAAGL,MAAM,EAAE;EAC7B,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACO,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEnE,MAAMS,kBAAkB,GAAGC,OAAO;EAElC,MAAMC,sBAAsB,GAAIC,KAAK,IAAK;IACxCN,cAAc,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IAElC,IAAIT,WAAW,CAACU,IAAI,EAAE,KAAK,EAAE,EAAE;MAC7BC,qBAAqB,CAAC,IAAI,CAAC;IAC7B;EACF,CAAC;EAED,MAAMC,qBAAqB,GAAIL,KAAK,IAAK;IACvCA,KAAK,CAACM,cAAc,EAAE;IAEtBV,qBAAqB,CAAC,IAAI,CAAC;IAE3B,IAAIH,WAAW,CAACU,IAAI,EAAE,KAAK,EAAE,EAAE;MAC7BC,qBAAqB,CAAC,KAAK,CAAC;MAC5B;IACF;IAEAA,qBAAqB,CAAC,IAAI,CAAC;;IAE3B;IACAV,cAAc,CAAC,EAAE,CAAC;EACpB,CAAC;EAED,MAAMa,kBAAkB,GAAG,CAACV,kBAAkB,IAAIF,kBAAkB;EAEpE,MAAMa,gBAAgB,GAAGD,kBAAkB,GACvC,sBAAsB,GACtB,cAAc;EAElB,MAAME,aAAa,GAAIT,KAAK,IAAK;IAC/BJ,qBAAqB,CAAC,IAAI,CAAC;IAE3B,IAAIH,WAAW,CAACU,IAAI,EAAE,KAAK,EAAE,EAAE;MAC7BC,qBAAqB,CAAC,KAAK,CAAC;IAC9B;EACF,CAAC;EAED,oBACE;IAAM,QAAQ,EAAEC,qBAAsB;IAAA,wBACpC;MAAK,SAAS,EAAEG,gBAAiB;MAAA,wBAC/B;QAAO,OAAO,EAAC,MAAM;QAAA,UAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAQ,eACvC;QACE,GAAG,EAAEhB,YAAa;QAClB,IAAI,EAAC,MAAM;QACX,EAAE,EAAC,MAAM;QACT,QAAQ,EAAEO,sBAAuB;QACjC,MAAM,EAAEU,aAAc;QACtB,KAAK,EAAEhB;MAAY;QAAA;QAAA;QAAA;MAAA,QACnB,EACDc,kBAAkB,iBACjB;QAAG,SAAS,EAAC,YAAY;QAAA,UAAC;MAAuB;QAAA;QAAA;QAAA;MAAA,QAClD;IAAA;MAAA;MAAA;MAAA;IAAA,QACG,eACN;MAAK,SAAS,EAAC,cAAc;MAAA,uBAC3B;QAAA,UAAQ;MAAM;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QACnB;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEX,CAAC;AAAC,GAlEIjB,WAAW;AAAA,KAAXA,WAAW;AAoEjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}